import disnake 
from disnake.ext import commands
from disnake import TextInputStyle
import sqlite3
import time

class Modal(disnake.ui.Modal):
    def __init__(self):
        components=[
            disnake.ui.TextInput(
                label="–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏",
                placeholder="–ê —è –ê—Ä—Ç—ë–º–∫–∞",
                custom_id="rolename",
                style=TextInputStyle.short,
                max_length=100,
            ),
            disnake.ui.TextInput(
                label="–¶–≤–µ—Ç —Ä–æ–ª–∏",
                placeholder="–ü—Ä–∏–º–µ—Ä #ffffff",
                custom_id="rolecolor",
                style=TextInputStyle.short,
                max_length=7,
            ),
        ]
        super().__init__(title="–ü–æ–∫—É–ø–∫–∞ —Ä–æ–ª–∏", components=components)
        
    async def callback(self, inter: disnake.ModalInteraction):
            if inter.text_values["rolename"]:
                pass
            elif inter.text_values["rolecolor"]:
                pass

class Profile(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
        self.conn = sqlite3.connect("data.db")
        self.last_bonus_time = {}


    @commands.slash_command(description="–û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")
    async def –ø—Ä–æ—Ñ–∏–ª—å(self, ctx, author1: disnake.Member = None):
        if ctx.author.bot:
            return

        if author1 is None:
            author1 = ctx.author

        if author1.bot:
            await ctx.send("–≠—Ç–æ –±–æ—Ç.", ephemeral=True)
            return

        author = ctx.author

        id_server = ctx.guild.id
        id_user = author.id
        name = author.display_name

        cur = self.conn.cursor()


        if author1 is None:
            cur.execute('''SELECT * FROM users WHERE server_id = ? AND user_id = ?''',
                    (id_server, id_user,))
            result = cur.fetchone()
            if result is None:
                cur.execute("""INSERT INTO users (server_id, name, user_id, lvl, xp, balance, time_voice, warning, mes, ocebe, clan, profcolor, lunanrole) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)""",
                            (id_server, name, id_user, 0, 0, 0, 0, 0, 0, None, None, None, 0))
                self.conn.commit()

                cur.execute('''SELECT * FROM users WHERE server_id = ? AND user_id = ?''',
                            (id_server, id_user,))
                result = cur.fetchone()
        else:
            cur.execute('''SELECT * FROM users WHERE server_id = ? AND user_id = ?''',
                    (id_server, author1.id,))
            result = cur.fetchone()
            if result is None:
                cur.execute("""INSERT INTO users (server_id, name, user_id, lvl, xp, balance, time_voice, warning, mes, ocebe, clan, profcolor, lunanrole) VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?)""",
                            (id_server, author1.name, author1.id, 0, 0, 0, 0, 0, 0, None, None, None, 0))
                self.conn.commit()

                cur.execute('''SELECT * FROM users WHERE server_id = ? AND user_id = ?''',
                            (id_server, author1.id,))
                result = cur.fetchone()
        balance = result[5]
        level = result[3]
        voice_time = result[6]
        xp = result[4]
        warnings = result[7]
        messages = result[8]
        clan = result[9]
        o_cebe = result[10]

        
        –æ–±—â–∏–µ_–º–∏–Ω—É—Ç—ã = (voice_time// 60) % 60
        –æ–±—â–∏–µ_—á–∞—Å—ã = (voice_time // 3600)


        if author1 == None:
            embed = disnake.Embed(
                description=f"> **–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**\n```–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {name}\n–û —Å–µ–±–µ: {o_cebe}\n–ö–ª–∞–Ω: {clan}```",
                colour=0x2b2d31
            )
            embed.set_author(name=f"{name} ‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å", icon_url=author.avatar)
        else:
            name = author1.display_name
            embed = disnake.Embed(
                    description=f"> **–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è**\n```–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {name}\n–û —Å–µ–±–µ: {o_cebe}\n–ö–ª–∞–Ω: {clan}```",
                    colour=0x2b2d31
                )
            embed.set_author(name=f"{name} ‚Ä¢ –ü—Ä–æ—Ñ–∏–ª—å", icon_url=author1.avatar)

        level_up_threshold = int(10 * (2 ** level))
        embed.add_field(name="> **–£—Ä–æ–≤–µ–Ω—å**", value=f"```yaml\nüí† {level}```")
        embed.add_field(name="> **–û–ø—ã—Ç**", value=f"```yaml\n{xp} –∏–∑ {level_up_threshold}```")
        embed.add_field(name="> **–ë–∞–ª–∞–Ω—Å**", value=f"```yaml\nüíé {balance}```")
        embed.add_field(name="> **–ù–∞—Ä—É—à–µ–Ω–∏—è**", value=f"```yaml\n‚ö†Ô∏è {warnings}```")
        embed.add_field(name="> **–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å**", value=f"```yaml\nüïê {–æ–±—â–∏–µ_—á–∞—Å—ã}—á {–æ–±—â–∏–µ_–º–∏–Ω—É—Ç—ã}–º```")
        embed.add_field(name="> **–°–æ–æ–±—â–µ–Ω–∏—è**", value=f"```yaml\nüí¨ {messages}```")

        await ctx.send(embed=embed, components=[
            disnake.ui.Button(
                label="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
                style=disnake.ButtonStyle.secondary,
                custom_id="settings"
            ),
            disnake.ui.Button(
                label="üõí –ú–∞–≥–∞–∑–∏–Ω",
                style=disnake.ButtonStyle.secondary,
                custom_id="buyrole"
            ),
            disnake.ui.Button(
                label="üéÅ –ë–æ–Ω—É—Å",
                style=disnake.ButtonStyle.success,
                custom_id="bonus"
            )
        ])

    async def check_bonus_cooldown(self, author):
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –±–æ–Ω—É—Å–æ–º
        current_time = time.time()
        last_time = self.last_bonus_time.get(author.id, 0)
        elapsed_time = current_time - last_time
        remaining_time = max(0, 28800 - elapsed_time)

        return remaining_time

    @commands.cooldown(1, 1, commands.BucketType.member)
    @commands.command(name="bonus")
    async def process_bonus(self, ctx):
        author = ctx.author
        remaining_time = await self.check_bonus_cooldown(author)

        min = int(remaining_time // 60) % 60
        h = int(remaining_time // 3600)

        if remaining_time > 0:
            embed = disnake.Embed(description=f"–í—ã –¥–æ–ª–∂–Ω—ã –ø–æ–¥–æ–∂–¥–∞—Ç—å –µ—â–µ **{h}** —á–∞—Å–æ–≤ **{min}** –º–∏–Ω, –ø—Ä–µ–∂–¥–µ —á–µ–º –∑–∞–±–∏—Ä–∞—Ç—å –±–æ–Ω—É—Å –µ—â–µ —Ä–∞–∑",
                                  colour=0x2b2d31)
            embed.set_author(name=f"{author.display_name} ‚Ä¢ –û—à–∏–±–∫–∞ 105", icon_url=author.avatar)
            await ctx.send(embed=embed, ephemeral=True)
            return

        id_server = ctx.guild.id
        id_user = author.id

        cur = self.conn.cursor()
        cur.execute('''SELECT * FROM users WHERE server_id = ? AND user_id = ?''', (id_server, id_user,))
        result = cur.fetchone()

        if result:
            balance = result[5]
            balance += 500
            cur.execute("""UPDATE users SET balance = ? WHERE server_id = ? AND user_id = ?""", (balance, id_server, id_user))
            self.conn.commit()

            embed = disnake.Embed(description="–ù–∞ –≤–∞—à –±–∞–ª–∞–Ω—Å –±—ã–ª–æ –∑–∞—á–∏—Å–ª–µ–Ω–æ `500`üíé –ü—Ä–∏—Ö–æ–¥–∏—Ç–µ —á–µ—Ä–µ–∑ 8 —á–∞—Å–æ–≤, —á—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å —Å–ª–µ–¥—É—é—â—É—é –Ω–∞–≥—Ä–∞–¥—É",
                                  colour=0x2b2d31)

            embed.set_author(name=f"{author.display_name} ‚Ä¢ –ë–æ–Ω—É—Å", icon_url=author.avatar)
            await ctx.send(embed=embed, ephemeral=True)

            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ–Ω—É—Å–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            self.last_bonus_time[author.id] = time.time()

    @commands.Cog.listener()
    async def on_button_click(self, inter: disnake.ApplicationCommandInteraction, inter1: disnake.MessageInteraction):
        if inter.component.custom_id == "settings":
            author = inter.author
            name = author.display_name
            embed = disnake.Embed(description="–¢—É—Ç –≤—ã –º–æ–∂–µ—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–µ–±–µ –∞ —Ç–∞–∫ –∂–µ –¥–∞—Ç—å –≤—Å–µ–º –ø–æ–Ω—è—Ç—å –∏–∑ –∫–∞–∫–æ–π –≤—ã –±–∞–Ω–¥—ã",
                                  colour=0x2b2d31)
            embed.set_author(name=f"{name} ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏", icon_url=author.avatar)
            await inter.send(embed=embed, ephemeral=True, components=[
                disnake.ui.Button(
                    label="–û —Å–µ–±–µ",
                    style=disnake.ButtonStyle.primary,
                    custom_id="setosebe"
                ),
                disnake.ui.Button(
                    label="–ö–ª–∞–Ω",
                    style=disnake.ButtonStyle.primary,
                    custom_id="setclan"
                )
            ])

        elif inter.component.custom_id == "setosebe":
            author = inter.author
            name = author.display_name
            embed = disnake.Embed(description="–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
                                  colour=0x2b2d31)
            embed.set_author(name=f"{name} ‚Ä¢ –û—à–∏–±–∫–∞ 404", icon_url=author.avatar)
            await inter.send(embed=embed, ephemeral=True)
        
        elif inter.component.custom_id == "setclan":
            author = inter.author
            name = author.display_name
            embed = disnake.Embed(description="–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ",
                                  colour=0x2b2d31)
            embed.set_author(name=f"{name} ‚Ä¢ –û—à–∏–±–∫–∞ 404", icon_url=author.avatar)
            await inter.send(embed=embed, ephemeral=True)

        #elif inter.component.custom_id == "buyrole":
        #    author = inter.author
        #    name = author.display_name
        #
        #    BuyRoleTime = ["–ö—É–ø–∏—Ç—å —Ä–æ–ª—å –Ω–∞ 30–¥–Ω–µ–π - 30000üíé", "–ö—É–ø–∏—Ç—å —Ä–æ–ª—å –Ω–∞ 7–¥–Ω–µ–π - 7500üíé", "–ö—É–ø–∏—Ç—å —Ä–æ–ª—å –Ω–∞ 1–¥–µ–Ω—å - 2500üíé"]
        #
        #    embed = disnake.Embed(title="–ü–æ–∫—É–ø–∫–∞ –ª–∏—á–Ω–æ–π —Ä–æ–ª–∏",
        #              description="–ü–æ–∫—É–ø–∫–∞ —Å–æ–≤–µ—Ä—à–∞–µ—Ç—Å—è –∑–∞ —Å–µ—Ä–≤–µ—Ä–Ω—É—é –≤–∞–ª—é—Ç—É üíé\n–Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Å—Ä–æ–∫ –≤—Ä–µ–º–µ–Ω–∏",
        #              colour=0x2b2d31)
        #
        #    embed.set_author(name=f"{author.display_name} ‚Ä¢ –ú–∞–≥–∞–∑–∏–Ω", icon_url=author.avatar)

            await inter.send(embed=embed, ephemeral=True, components=[
                disnake.ui.StringSelect(
                    custom_id="buycustomrole"
                )
            ])

        elif inter.component.custom_id == "bonus":
            await self.process_bonus(inter)

        elif inter.component.custom_id == "buyrole":
                await inter1.response.send_modal(modal=Modal())



    # @commands.Cog.listener()
    # async def SelectMenu(inter: disnake.MessageInteraction):
    #      if inter.component.custom_id == "buycustomrole":
    #          BuyRoleTime = ["–ö—É–ø–∏—Ç—å —Ä–æ–ª—å –Ω–∞ 30–¥–Ω–µ–π - 30000üíé", "–ö—É–ø–∏—Ç—å —Ä–æ–ª—å –Ω–∞ 7–¥–Ω–µ–π - 7000üíé", "–ö—É–ø–∏—Ç—å —Ä–æ–ª—å –Ω–∞ 1–¥–µ–Ω—å - 2500üíé"]
    #          if inter.values[0] == BuyRoleTime[0]:
    #              await inter.response.send_modal(modal=Modal())
    #     await inter.send("–•–£–ô")

    def cog_unload(self):
        self.conn.close()


def setup(bot):
    bot.add_cog(Profile(bot))
